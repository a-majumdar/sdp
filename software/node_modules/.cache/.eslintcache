[{"/Users/oscaralberigo/Desktop/sdp/software/src/components/organisms/Footer.js":"1","/Users/oscaralberigo/Desktop/sdp/software/src/components/organisms/Navbar.js":"2","/Users/oscaralberigo/Desktop/sdp/software/src/screens/ProfilePage.js":"3","/Users/oscaralberigo/Desktop/sdp/software/src/contexts/AuthContext.js":"4"},{"size":2531,"mtime":1645178214303,"results":"5","hashOfConfig":"6"},{"size":2826,"mtime":1645183104371,"results":"7","hashOfConfig":"6"},{"size":1699,"mtime":1645184580139,"results":"8","hashOfConfig":"6"},{"size":1153,"mtime":1645184563969,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"k1tv7g",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"17"},"/Users/oscaralberigo/Desktop/sdp/software/src/components/organisms/Footer.js",["26"],[],"/Users/oscaralberigo/Desktop/sdp/software/src/components/organisms/Navbar.js",["27","28"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport Logo from \"../../assets/PlantEd Small.png\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Button } from \"../atoms/Button\";\nimport \"../organisms/Navbar.css\";\n\nconst Navbar = () => {\n  const [click, setClick] = useState(false);\n  const [button, setButton] = useState(true);\n  const { currentUser } = useAuth();\n\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => setClick(false);\n\n  const showButton = () => {\n    if (window.innerWidth <= 960) {\n      setButton(false);\n    } else {\n      setButton(true);\n    }\n  };\n\n  useEffect(() => {\n    showButton();\n  }, []);\n\n  window.addEventListener(\"resize\", showButton);\n\n  return (\n    <>\n      <nav className=\"navbar\">\n        <div className=\"navbar-container\">\n          <NavLink to=\"/\" className=\"logo-button\">\n            <a href=\"/\" className=\"logo\">\n              <img className=\"logo\" src={Logo} alt=\"\" />\n            </a>\n          </NavLink>\n          <div className=\"menu-icon\" onClick={handleClick}>\n            <i className={click ? \"fas fa-times\" : \"fas fa-bars\"} />\n          </div>\n          <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-links\" onClick={closeMobileMenu}>\n                Home\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link\n                to=\"/about-us\"\n                className=\"nav-links\"\n                onClick={closeMobileMenu}\n              >\n                About Us\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                to=\"/explore\"\n                className=\"nav-links\"\n                onClick={closeMobileMenu}\n              >\n                Explore\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                to=\"/contact\"\n                className=\"nav-links\"\n                onClick={closeMobileMenu}\n              >\n                Contact\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link\n                to=\"/\"\n                className=\"nav-links-mobile\"\n                onClick={closeMobileMenu}\n              >\n                Sign Up\n              </Link>\n            </li>\n          </ul>\n          {!currentUser ? (\n            <Link to=\"/sign-up\">\n              <button className=\"button-planted\">Sign Up/Login</button>\n            </Link>\n          ) : (\n            <Link to=\"profile\">\n              <button className=\"button-planted\">Go To Profile Page</button>\n            </Link>\n          )}\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default Navbar;\n",["29","30"],"/Users/oscaralberigo/Desktop/sdp/software/src/screens/ProfilePage.js",["31"],[],"import React from \"react\";\nimport \"../App.css\";\nimport { Card, Button, Form } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport \"./ProfilePage.css\";\nimport Footer from \"../components/organisms/Footer\";\n\nexport default function ProfilePage() {\n  const [error, setError] = useState();\n  const { currentUser, logOut, isLinked } = useAuth();\n  const history = useHistory();\n\n  async function handleLogout() {\n    setError(\"\");\n\n    try {\n      await logOut();\n      history.push(\"/\");\n    } catch {\n      setError(\"Failed to logOut\");\n    }\n  }\n\n  if (isLinked) {\n    return <h1>{currentUser.email} has linked their propogator</h1>;\n  } else {\n    return (\n      <>\n        <div className=\"username\">\n          <h1>\n            Hello, {currentUser.email} you're almost ready to start growing!\n            <button onClick={handleLogout}>Log Out</button>\n          </h1>\n        </div>\n        <Card className=\"card_prop\">\n          <Card.Body>\n            <h2 className=\"text-center mb-4\">\n              1 more step, link your propogator\n            </h2>\n            <Form>\n              <Form.Group>\n                <Form.Label>Propogator Code</Form.Label>\n                <Form.Control />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Give a name to your propogator</Form.Label>\n                <Form.Control />\n              </Form.Group>\n              <Button className=\"link-button\" to=\"/\">\n                Link it!\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n        <Footer></Footer>\n      </>\n    );\n  }\n}\n","/Users/oscaralberigo/Desktop/sdp/software/src/contexts/AuthContext.js",["32","33"],[],"import React, { useContext, useState } from \"react\";\nimport { auth } from \"../firebase/firebase-config\";\nimport { useEffect } from \"react\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  const [isLinked, setIsLinked] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n\n  const signUp = (email, password) => {\n    auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  const logIn = (email, password) => {\n    auth.signInWithEmailAndPassword(email, password);\n  };\n\n  function logOut() {\n    return auth.signOut();\n  }\n\n  function linkPropogator() {\n    //To Implement\n  }\n\n  const value = {\n    currentUser,\n    isLinked,\n    signUp,\n    logIn,\n    logOut,\n    loading,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n",{"ruleId":"34","severity":1,"message":"35","line":75,"column":9,"nodeType":"36","messageId":"37","endLine":80,"endColumn":10,"fix":"38"},{"ruleId":"39","severity":1,"message":"40","line":5,"column":10,"nodeType":"41","messageId":"42","endLine":5,"endColumn":16},{"ruleId":"39","severity":1,"message":"43","line":10,"column":10,"nodeType":"41","messageId":"42","endLine":10,"endColumn":16},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"39","severity":1,"message":"48","line":11,"column":10,"nodeType":"41","messageId":"42","endLine":11,"endColumn":15},{"ruleId":"39","severity":1,"message":"49","line":14,"column":20,"nodeType":"41","messageId":"42","endLine":14,"endColumn":31},{"ruleId":"39","severity":1,"message":"50","line":36,"column":12,"nodeType":"41","messageId":"42","endLine":36,"endColumn":26},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"51","text":"52"},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'button' is assigned a value but never used.","no-native-reassign",["53"],"no-negated-in-lhs",["54"],"'error' is assigned a value but never used.","'setIsLinked' is assigned a value but never used.","'linkPropogator' is defined but never used.",[2400,2400]," rel=\"noreferrer\"","no-global-assign","no-unsafe-negation"]