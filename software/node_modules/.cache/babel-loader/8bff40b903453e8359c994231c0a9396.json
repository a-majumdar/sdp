{"ast":null,"code":"var _jsxFileName = \"/Users/oscaralberigo/Desktop/sdp/software/src/contexts/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { auth } from \"../firebase/firebase-config\";\nimport { useEffect } from \"react\";\nimport { db } from \"../firebase/firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  const [isLinked, setIsLinked] = useState(false);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n\n  const signUp = (email, password, propogatorID) => {\n    auth.createUserWithEmailAndPassword(email, password).then(cred => {\n      return db.collection(\"User_Propogator_Relations\").doc(cred.user.uid).set({\n        propogatorID: propogatorID\n      });\n    });\n  };\n\n  const logIn = (email, password) => {\n    auth.signInWithEmailAndPassword(email, password);\n  };\n\n  function logOut() {\n    return auth.signOut();\n  }\n\n  function linkPropogator() {//To Implement\n  }\n\n  const value = {\n    currentUser,\n    isLinked,\n    signUp,\n    logIn,\n    logOut,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AuthProvider, \"ynoKMy0RdmAdnkKow8eTaJ6ZHrs=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/oscaralberigo/Desktop/sdp/software/src/contexts/AuthContext.js"],"names":["React","useContext","useState","auth","useEffect","db","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","isLinked","setIsLinked","unsubscribe","onAuthStateChanged","user","signUp","email","password","propogatorID","createUserWithEmailAndPassword","then","cred","collection","doc","uid","set","logIn","signInWithEmailAndPassword","logOut","signOut","linkPropogator","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT,QAAqB,6BAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,EAAT,QAAmB,6BAAnB;;AAEA,MAAMC,WAAW,gBAAGN,KAAK,CAACO,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,SAAOP,UAAU,CAACK,WAAD,CAAjB;AACD;;GAFeE,O;;AAIhB,OAAO,SAASC,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACzC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,WAAW,GAAGd,IAAI,CAACe,kBAAL,CAAyBC,IAAD,IAAU;AACpDP,MAAAA,cAAc,CAACO,IAAD,CAAd;AACAL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHmB,CAApB;AAIA,WAAOG,WAAP;AACD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMG,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,YAAlB,KAAmC;AAChDpB,IAAAA,IAAI,CAACqB,8BAAL,CAAoCH,KAApC,EAA2CC,QAA3C,EAAqDG,IAArD,CAA2DC,IAAD,IAAU;AAClE,aAAOrB,EAAE,CAACsB,UAAH,CAAc,2BAAd,EAA2CC,GAA3C,CAA+CF,IAAI,CAACP,IAAL,CAAUU,GAAzD,EAA8DC,GAA9D,CAAkE;AACvEP,QAAAA,YAAY,EAAEA;AADyD,OAAlE,CAAP;AAGD,KAJD;AAKD,GAND;;AAQA,QAAMQ,KAAK,GAAG,CAACV,KAAD,EAAQC,QAAR,KAAqB;AACjCnB,IAAAA,IAAI,CAAC6B,0BAAL,CAAgCX,KAAhC,EAAuCC,QAAvC;AACD,GAFD;;AAIA,WAASW,MAAT,GAAkB;AAChB,WAAO9B,IAAI,CAAC+B,OAAL,EAAP;AACD;;AAED,WAASC,cAAT,GAA0B,CACxB;AACD;;AAED,QAAMC,KAAK,GAAG;AACZzB,IAAAA,WADY;AAEZI,IAAAA,QAFY;AAGZK,IAAAA,MAHY;AAIZW,IAAAA,KAJY;AAKZE,IAAAA,MALY;AAMZpB,IAAAA;AANY,GAAd;AASA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEuB,KAA7B;AAAA,cACG,CAACvB,OAAD,IAAYH;AADf;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IA/CeD,Y;;KAAAA,Y","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { auth } from \"../firebase/firebase-config\";\nimport { useEffect } from \"react\";\nimport { db } from \"../firebase/firebase-config\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  const [isLinked, setIsLinked] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n\n  const signUp = (email, password, propogatorID) => {\n    auth.createUserWithEmailAndPassword(email, password).then((cred) => {\n      return db.collection(\"User_Propogator_Relations\").doc(cred.user.uid).set({\n        propogatorID: propogatorID,\n      });\n    });\n  };\n\n  const logIn = (email, password) => {\n    auth.signInWithEmailAndPassword(email, password);\n  };\n\n  function logOut() {\n    return auth.signOut();\n  }\n\n  function linkPropogator() {\n    //To Implement\n  }\n\n  const value = {\n    currentUser,\n    isLinked,\n    signUp,\n    logIn,\n    logOut,\n    loading,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}