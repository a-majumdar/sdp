{"ast":null,"code":"var _jsxFileName = \"/Users/oscaralberigo/Desktop/sdp/software/src/screens/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef } from \"react\";\nimport { Card, Form, Button, Container, Alert } from \"react-bootstrap\";\nimport PlantBackground from \"../assets/plants.jpeg\";\nimport Footer from \"../components/organisms/Footer\";\nimport { useState, useEffect } from \"react\";\nimport { auth } from \"../firebase/firebase-config\";\nimport \"./SignUp.css\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const [hasAccount, setHasAccount] = useState(false);\n  const {\n    signup,\n    currentUser\n  } = useAuth();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    signup(email, password);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"background-image\",\n      src: PlantBackground\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"login\",\n      style: {\n        minHeight: \"130vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginContainer\",\n        style: {\n          maxWidth: \"400px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          autoFocus: true,\n          required: true,\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btnContainer\",\n          children: hasAccount ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => setHasAccount(!hasAccount),\n                children: [\" \", \"Sign Up\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onSubmit: handleSubmit,\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Have an account?\", /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => setHasAccount(!hasAccount),\n                children: [\" \", \"Sign In\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SignUp, \"zPb8yJUfffiGvRNsNfjkunT0a70=\", false, function () {\n  return [useAuth];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/oscaralberigo/Desktop/sdp/software/src/screens/SignUp.js"],"names":["React","useContext","useRef","Card","Form","Button","Container","Alert","PlantBackground","Footer","useState","useEffect","auth","useAuth","SignUp","emailRef","passwordRef","passwordConfirmRef","hasAccount","setHasAccount","signup","currentUser","handleSubmit","e","preventDefault","email","password","minHeight","maxWidth","setEmail","target","value","setPassword"],"mappings":"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","sourcesContent":["import React, { useContext, useRef } from \"react\";\nimport { Card, Form, Button, Container, Alert } from \"react-bootstrap\";\nimport PlantBackground from \"../assets/plants.jpeg\";\nimport Footer from \"../components/organisms/Footer\";\nimport { useState, useEffect } from \"react\";\nimport { auth } from \"../firebase/firebase-config\";\nimport \"./SignUp.css\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nexport default function SignUp() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const [hasAccount, setHasAccount] = useState(false);\n  const { signup, currentUser } = useAuth();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    signup(email, password);\n  }\n\n  return (\n    <>\n      <img className=\"background-image\" src={PlantBackground}></img>\n      <Container className=\"login\" style={{ minHeight: \"130vh\" }}>\n        <div className=\"loginContainer\" style={{ maxWidth: \"400px\" }}>\n          <label>Email</label>\n          <input\n            type=\"text\"\n            autoFocus\n            required\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <p className=\"errorMsg\"></p>\n          <label>Password</label>\n          <input\n            type=\"password\"\n            required\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <p className=\"errorMsg\"></p>\n          <div className=\"btnContainer\">\n            {hasAccount ? (\n              <>\n                <button className=\"button\">Sign In</button>\n                <p>\n                  Don't have an account?\n                  <span onClick={() => setHasAccount(!hasAccount)}>\n                    {\" \"}\n                    Sign Up\n                  </span>\n                </p>\n              </>\n            ) : (\n              <>\n                <button onSubmit={handleSubmit}>Sign Up</button>\n                <p>\n                  Have an account?\n                  <span onClick={() => setHasAccount(!hasAccount)}>\n                    {\" \"}\n                    Sign In\n                  </span>\n                </p>\n              </>\n            )}\n          </div>\n        </div>\n      </Container>\n      <Footer></Footer>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}