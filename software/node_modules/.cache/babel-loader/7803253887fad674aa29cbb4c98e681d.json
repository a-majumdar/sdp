{"ast":null,"code":"var _jsxFileName = \"/Users/oscaralberigo/Desktop/sdp/software/src/contexts/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { auth, db } from \"../firebase/firebase-config\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n\n  const signUp = (email, password) => {\n    auth.createUserWithEmailAndPassword(email, password).then(cred => {\n      return db.collection(\"users\");\n    });\n  };\n\n  const logIn = (email, password) => {\n    auth.signInWithEmailAndPassword(email, password);\n  };\n\n  function logOut() {\n    return auth.signOut();\n  }\n\n  const value = {\n    currentUser,\n    signUp,\n    logIn,\n    logOut,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AuthProvider, \"1cdeWWSmbSz3cOWqWLAt+Ta4DMY=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/oscaralberigo/Desktop/sdp/software/src/contexts/AuthContext.js"],"names":["React","useContext","useState","auth","db","useEffect","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","unsubscribe","onAuthStateChanged","user","signUp","email","password","createUserWithEmailAndPassword","then","cred","collection","logIn","signInWithEmailAndPassword","logOut","signOut","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,6BAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,WAAW,gBAAGN,KAAK,CAACO,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,SAAOP,UAAU,CAACK,WAAD,CAAjB;AACD;;GAFeE,O;;AAIhB,OAAO,SAASC,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACzC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,WAAW,GAAGZ,IAAI,CAACa,kBAAL,CAAyBC,IAAD,IAAU;AACpDL,MAAAA,cAAc,CAACK,IAAD,CAAd;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHmB,CAApB;AAIA,WAAOC,WAAP;AACD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMG,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAClCjB,IAAAA,IAAI,CAACkB,8BAAL,CAAoCF,KAApC,EAA2CC,QAA3C,EAAqDE,IAArD,CAA2DC,IAAD,IAAU;AAClE,aAAOnB,EAAE,CAACoB,UAAH,CAAc,OAAd,CAAP;AACD,KAFD;AAGD,GAJD;;AAMA,QAAMC,KAAK,GAAG,CAACN,KAAD,EAAQC,QAAR,KAAqB;AACjCjB,IAAAA,IAAI,CAACuB,0BAAL,CAAgCP,KAAhC,EAAuCC,QAAvC;AACD,GAFD;;AAIA,WAASO,MAAT,GAAkB;AAChB,WAAOxB,IAAI,CAACyB,OAAL,EAAP;AACD;;AAED,QAAMC,KAAK,GAAG;AACZlB,IAAAA,WADY;AAEZO,IAAAA,MAFY;AAGZO,IAAAA,KAHY;AAIZE,IAAAA,MAJY;AAKZd,IAAAA;AALY,GAAd;AAQA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEgB,KAA7B;AAAA,cACG,CAAChB,OAAD,IAAYH;AADf;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IAvCeD,Y;;KAAAA,Y","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { auth, db } from \"../firebase/firebase-config\";\nimport { useEffect } from \"react\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n\n  const signUp = (email, password) => {\n    auth.createUserWithEmailAndPassword(email, password).then((cred) => {\n      return db.collection(\"users\");\n    });\n  };\n\n  const logIn = (email, password) => {\n    auth.signInWithEmailAndPassword(email, password);\n  };\n\n  function logOut() {\n    return auth.signOut();\n  }\n\n  const value = {\n    currentUser,\n    signUp,\n    logIn,\n    logOut,\n    loading,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}