{"ast":null,"code":"var _jsxFileName = \"/Users/oscaralberigo/Desktop/sdp/software/src/contexts/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { auth } from \"../firebase/firebase-config\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const clearInputs = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const handleLogout = () => {\n    auth.signOut();\n    setCurrentUser(\"\");\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  const handleSignUp = () => {\n    clearErrors();\n    auth.createUserWithEmailAndPassword(email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/weak-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const signIn = () => {\n    clearErrors();\n    auth.signInWithEmailAndPassword(email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/wrong-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const authListener = () => {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        setCurrentUser(user);\n      } else {\n        setCurrentUser(\"\");\n      }\n    });\n  };\n\n  const value = {\n    currentUser,\n    signup,\n    emailError,\n    passwordError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(AuthProvider, \"38+I4s0dp/7wQ85EkYmSn9OGnl4=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/oscaralberigo/Desktop/sdp/software/src/contexts/AuthContext.js"],"names":["React","useContext","useState","auth","useEffect","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","email","setEmail","password","setPassword","clearInputs","handleLogout","signOut","authListener","handleSignUp","clearErrors","createUserWithEmailAndPassword","catch","err","code","setEmailError","message","setPasswordError","signIn","signInWithEmailAndPassword","onAuthStateChanged","user","value","signup","emailError","passwordError"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT,QAAqB,6BAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,SAAON,UAAU,CAACI,WAAD,CAAjB;AACD;;GAFeE,O;;AAIhB,OAAO,SAASC,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACzC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMc,WAAW,GAAG,MAAM;AACxBH,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAHD;;AAKA,QAAME,YAAY,GAAG,MAAM;AACzBd,IAAAA,IAAI,CAACe,OAAL;AACAP,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAHD;;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzBC,IAAAA,WAAW;AACXlB,IAAAA,IAAI,CAACmB,8BAAL,CAAoCV,KAApC,EAA2CE,QAA3C,EAAqDS,KAArD,CAA4DC,GAAD,IAAS;AAClE,cAAQA,GAAG,CAACC,IAAZ;AACE,aAAK,2BAAL;AACA,aAAK,oBAAL;AACEC,UAAAA,aAAa,CAACF,GAAG,CAACG,OAAL,CAAb;AACA;;AACF,aAAK,oBAAL;AACEC,UAAAA,gBAAgB,CAACJ,GAAG,CAACG,OAAL,CAAhB;AACA;AAPJ;AASD,KAVD;AAWD,GAbD;;AAeA,QAAME,MAAM,GAAG,MAAM;AACnBR,IAAAA,WAAW;AACXlB,IAAAA,IAAI,CAAC2B,0BAAL,CAAgClB,KAAhC,EAAuCE,QAAvC,EAAiDS,KAAjD,CAAwDC,GAAD,IAAS;AAC9D,cAAQA,GAAG,CAACC,IAAZ;AACE,aAAK,oBAAL;AACA,aAAK,oBAAL;AACA,aAAK,qBAAL;AACEC,UAAAA,aAAa,CAACF,GAAG,CAACG,OAAL,CAAb;AACA;;AACF,aAAK,qBAAL;AACEC,UAAAA,gBAAgB,CAACJ,GAAG,CAACG,OAAL,CAAhB;AACA;AARJ;AAUD,KAXD;AAYD,GAdD;;AAgBA,QAAMR,YAAY,GAAG,MAAM;AACzBhB,IAAAA,IAAI,CAAC4B,kBAAL,CAAyBC,IAAD,IAAU;AAChC,UAAIA,IAAJ,EAAU;AACRrB,QAAAA,cAAc,CAACqB,IAAD,CAAd;AACD,OAFD,MAEO;AACLrB,QAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,KAND;AAOD,GARD;;AAUA,QAAMsB,KAAK,GAAG;AACZvB,IAAAA,WADY;AAEZwB,IAAAA,MAFY;AAGZC,IAAAA,UAHY;AAIZC,IAAAA;AAJY,GAAd;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEH,KAA7B;AAAA,cAAqCxB;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;IApEeD,Y;;KAAAA,Y","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { auth } from \"../firebase/firebase-config\";\nimport { useEffect } from \"react\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const clearInputs = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const handleLogout = () => {\n    auth.signOut();\n    setCurrentUser(\"\");\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  const handleSignUp = () => {\n    clearErrors();\n    auth.createUserWithEmailAndPassword(email, password).catch((err) => {\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(err.message);\n          break;\n        case \"auth/weak-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const signIn = () => {\n    clearErrors();\n    auth.signInWithEmailAndPassword(email, password).catch((err) => {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          setEmailError(err.message);\n          break;\n        case \"auth/wrong-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const authListener = () => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setCurrentUser(user);\n      } else {\n        setCurrentUser(\"\");\n      }\n    });\n  };\n\n  const value = {\n    currentUser,\n    signup,\n    emailError,\n    passwordError,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n"]},"metadata":{},"sourceType":"module"}